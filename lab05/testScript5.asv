b = figure8(3, 1, 0.5);
t = robotTrajectory(b, 0, 0, 0, 0, 1000, 0, b.tf + 2 * b.tPause);

robot = raspbot('sim');

currT = 0;
prevT = 0;
firstIteration = false;
vla = zeros(1, 1000);
vra = zeros(1, 1000);
tarr = zeros(1, 1000);
xarr = zeros(1, 1000);
yarr = zeros(1, 1000);
tharr = zeros(1, 1000);
realX = zeros(1, 1000);
realY = zeros(1, 1000);
realTh = zeros(1, 1000);

count = 1;
pause(2);
lastT = 0;
thReal = 0;
yReal = 0;
xReal = 0;
while(currT < b.Tf + 2 * b.tPause * b.ks)
    if(firstIteration == false)
        startTic = tic();        
        firstIteration = true;
    end
    currT = toc(startTic);
    time = currT / t.ref.ks;
    
    if ((currT < t.ref.tPause) || (currT > t.ref.tPause + t.ref.Tf))
        vl = 0;
        vr = 0;
        v = 0;
        w = 0;
    else
        [v, w] = t.ref.computeControl(time);
        v = v * t.ref.ks;
        w = w * t.ref.ks;
        [vl, vr] = robotModel.VwTovlvr(v, w);
        
    end
    dt = time - lastT;
    thReal = thReal + w ./2 * dt;
    xReal = xReal + v * dt * cos(thReal);
    yReal = yReal + v * dt * sin(thReal);
    thReal = thReal +  w ./2 * dt;
    realX(count) = xReal;
    realY(count) = yReal;
    realTh(count) = thReal;
     
    [x, y, th] = t.getPoseAtT(time);
    xarr(count) = x;
    yarr(count) = y;
    tharr(count) = th;
    
    vla(count) = vl;
    vra(count) = vr;
    tarr(count) = time;
    count = count + 1;
    robot.sendVelocity(vl, vr);
%     s = v .* dt + slast;
    lastT = time;
    pause(0.05);
end
xarr = xarr(1:count-1);
yarr=yarr(1:count-1);
tharr = tharr(1:count-1);
realX = realX(1:count-1);
realY = realY(1:count-1);
realTh = realTh(1:count-1);
robot.shutdown();